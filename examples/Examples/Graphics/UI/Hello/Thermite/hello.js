// Generated by psc version 0.6.8
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = function (x) {
        return x;
    };
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unit = {};
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    
    /**
     *  | Returns its first argument and ignores its second.
     */
    var $$const = function (_35) {
        return function (_36) {
            return _35;
        };
    };
    var $$void = function (__dict_Functor_10) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_10)($$const(unit))(fa);
        };
    };
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_5) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_4) {
                        return $$return(__dict_Monad_16)(_5(_4));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        "$": $dollar, 
        "<<<": $less$less$less, 
        "const": $$const, 
        semigroupoidArr: semigroupoidArr
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Graphics_UI = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Graphics_UI_Color_Name = PS.Graphics_UI_Color_Name;
    var Graphics_UI_Color_RGB = PS.Graphics_UI_Color_RGB;
    
    /**
     *  | We can make some text.
     */
    var Text = function (text) {
        this.text = text;
    };
    
    /**
     *  | We can make some text.
     */
    var text = function (dict) {
        return dict.text;
    };
    return {
        Text: Text, 
        text: text
    };
})();
var PS = PS || {};
PS.Examples_Graphics_UI_Hello = (function () {
    "use strict";
    var Graphics_UI = PS.Graphics_UI;
    var Prelude = PS.Prelude;
    var hello = function (__dict_Text_103) {
        return Graphics_UI.text(__dict_Text_103)("Hello World");
    };
    return {
        hello: hello
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (_119) {
        return function (_120) {
            return function (_121) {
                if (_121 instanceof Nothing) {
                    return _119;
                };
                if (_121 instanceof Just) {
                    return _120(_121.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Thermite_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Spec = function (x) {
        return x;
    };
    return {
        Spec: Spec
    };
})();
var PS = PS || {};
PS.Thermite_Internal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    
  function getStateImpl(ctx) {
    return function() {
      return ctx.state;
    };
  }
  ;
    
  function setStateImpl(ctx) {
    return function(state) {
      return function() {
        ctx.setState(state);
      };
    };
  }
  ;
    
  function textImpl(s) {
    return s;
  }
  ;
    
  function createElementImpl(name) {
    return function(ps) {
      return function(children) {
        var props = {};

        for (var i = 0; i < ps.length; i++) {
          var p = ps[i];
          props[p[0]] = p[1];
        }

        return React.createElement(name, props, children);
      };
    };
  }
  ;
    
  function createClassImpl(runAction) {
    return function(maybe) {
      return function(spec) {
        return React.createClass({
          getInitialState: function() {
            return spec.initialState;
          },
          performAction: function(action) {
            runAction(this)(spec.performAction(this)(action))();
          },
          render: function() {
            return spec.render(this)(this.state)(this.props);
          },
          componentWillMount: function() {
            var self = this;
            maybe(function() { })(function(action) {
              return function() {
                self.performAction(action);
              };
            })(spec.componentWillMount)();
          },
          displayName: maybe(undefined)(function(a) { return a; })(spec.displayName)
        })
      };
    };
  }
  ;
    
  function renderImpl(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), document.body);
      };
    };
  }
  ;
    return {
        renderImpl: renderImpl, 
        createClassImpl: createClassImpl, 
        createElementImpl: createElementImpl, 
        textImpl: textImpl, 
        setStateImpl: setStateImpl, 
        getStateImpl: getStateImpl
    };
})();
var PS = PS || {};
PS.Thermite_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Internal = PS.Thermite_Internal;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    var GetState = (function () {
        function GetState(value0) {
            this.value0 = value0;
        };
        GetState.create = function (value0) {
            return new GetState(value0);
        };
        return GetState;
    })();
    var SetState = (function () {
        function SetState(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetState.create = function (value0) {
            return function (value1) {
                return new SetState(value0, value1);
            };
        };
        return SetState;
    })();
    var Wait = (function () {
        function Wait(value0) {
            this.value0 = value0;
        };
        Wait.create = function (value0) {
            return new Wait(value0);
        };
        return Wait;
    })();
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Impure = (function () {
        function Impure(value0) {
            this.value0 = value0;
        };
        Impure.create = function (value0) {
            return new Impure(value0);
        };
        return Impure;
    })();
    var runAction = function (ctx) {
        var go = function (_773) {
            if (_773 instanceof Pure) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
            };
            if (_773 instanceof Impure && _773.value0 instanceof GetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _32 = Thermite_Internal.getStateImpl(ctx)();
                    return go(_773.value0.value0(_32))();
                });
            };
            if (_773 instanceof Impure && _773.value0 instanceof SetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    Thermite_Internal.setStateImpl(ctx)(_773.value0.value0)();
                    return go(_773.value0.value1)();
                });
            };
            if (_773 instanceof Impure && _773.value0 instanceof Wait) {
                return _773.value0.value0(go);
            };
            throw new Error("Failed pattern match");
        };
        return go;
    };
    var functorActionF = new Prelude.Functor(function (_771) {
        return function (_772) {
            if (_772 instanceof GetState) {
                return new GetState(Prelude["<<<"](Prelude.semigroupoidArr)(_771)(_772.value0));
            };
            if (_772 instanceof SetState) {
                return new SetState(_772.value0, _771(_772.value1));
            };
            if (_772 instanceof Wait) {
                return new Wait(function (k_1) {
                    return _772.value0(Prelude["<<<"](Prelude.semigroupoidArr)(k_1)(_771));
                });
            };
            throw new Error("Failed pattern match");
        };
    });
    var functorAction = new Prelude.Functor(function (_774) {
        return function (_775) {
            if (_775 instanceof Pure) {
                return new Pure(_774(_775.value0));
            };
            if (_775 instanceof Impure) {
                return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(_774))(_775.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var monadAction = new Prelude.Monad(function () {
        return applicativeAction;
    }, function () {
        return bindAction;
    });
    var bindAction = new Prelude.Bind(function (_776) {
        return function (_777) {
            if (_776 instanceof Pure) {
                return _777(_776.value0);
            };
            if (_776 instanceof Impure) {
                return Impure.create(Prelude["<#>"](functorActionF)(_776.value0)(function (a_1) {
                    return Prelude[">>="](bindAction)(a_1)(_777);
                }));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyAction;
    });
    var applyAction = new Prelude.Apply(Prelude.ap(monadAction), function () {
        return functorAction;
    });
    var applicativeAction = new Prelude.Applicative(function () {
        return applyAction;
    }, Pure.create);
    return {
        runAction: runAction, 
        functorAction: functorAction, 
        applyAction: applyAction, 
        applicativeAction: applicativeAction, 
        bindAction: bindAction, 
        monadAction: monadAction
    };
})();
var PS = PS || {};
PS.Thermite_Html = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var text = Thermite_Internal.textImpl;
    return {
        text: text
    };
})();
var PS = PS || {};
PS.Thermite = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Thermite_Action = PS.Thermite_Action;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Types = PS.Thermite_Types;
    var simpleSpec = function (initialState) {
        return function (performAction) {
            return function (render_1) {
                return {
                    initialState: initialState, 
                    performAction: performAction, 
                    render: render_1, 
                    componentWillMount: Data_Maybe.Nothing.value, 
                    displayName: Data_Maybe.Nothing.value
                };
            };
        };
    };
    var render = Thermite_Internal.renderImpl;
    var createClass = Thermite_Internal.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
    return {
        render: render, 
        createClass: createClass, 
        simpleSpec: simpleSpec
    };
})();
var PS = PS || {};
PS.Thermite_Html_Elements = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var p = Thermite_Internal.createElementImpl("p");
    var p$prime = p([  ]);
    return {
        "p'": p$prime, 
        p: p
    };
})();
var PS = PS || {};
PS.Graphics_UI_Interpreter_Thermite = (function () {
    "use strict";
    var Thermite_Html_Elements = PS.Thermite_Html_Elements;
    var Thermite_Events = PS.Thermite_Events;
    var Thermite_Html = PS.Thermite_Html;
    var Prelude = PS.Prelude;
    var Thermite = PS.Thermite;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Graphics_UI = PS.Graphics_UI;
    var Thermite_Action = PS.Thermite_Action;
    var Thermite_Types = PS.Thermite_Types;
    
    /**
     *  Not yet...
     *  instance groupHorizontalComponentClass :: GroupHorizontal (T.ComponentClass props eff) where
     *    groupHorizontal cs =
     *      T.createClass $ T.simpleSpec unit
     *                                   (\_ _ -> pure unit)
     *                                   (\_ _ _ -> T.span' cs)
     */
    var textThermiteHtml = new Graphics_UI.Text(function (str) {
        return Thermite_Html_Elements["p'"]([ Thermite_Html.text(str) ]);
    });
    var textThermiteComponentClass = new Graphics_UI.Text(function (s) {
        return Thermite.createClass(Thermite.simpleSpec(Prelude.unit)(function (_792) {
            return function (_791) {
                return Prelude.pure(Thermite_Action.applicativeAction)(Prelude.unit);
            };
        })(function (_795) {
            return function (_794) {
                return function (_793) {
                    return Graphics_UI.text(textThermiteHtml)(s);
                };
            };
        }));
    });
    return {
        textThermiteHtml: textThermiteHtml, 
        textThermiteComponentClass: textThermiteComponentClass
    };
})();
var PS = PS || {};
PS.Examples_Graphics_UI_Hello_Thermite = (function () {
    "use strict";
    var Thermite = PS.Thermite;
    var Examples_Graphics_UI_Hello = PS.Examples_Graphics_UI_Hello;
    var Prelude = PS.Prelude;
    var Graphics_UI_Interpreter_Thermite = PS.Graphics_UI_Interpreter_Thermite;
    var main = Thermite.render(Examples_Graphics_UI_Hello.hello(Graphics_UI_Interpreter_Thermite.textThermiteComponentClass))(Prelude.unit);
    return {
        main: main
    };
})();
PS.Examples_Graphics_UI_Hello_Thermite.main();

